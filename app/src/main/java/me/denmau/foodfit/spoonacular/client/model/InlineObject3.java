/*
 * spoonacular API
 * The spoonacular Nutrition, RecipeModel, and Food API allows you to access over 380,000 recipes, thousands of ingredients, 80,000 food products, and 100,000 menu items. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: david@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package me.denmau.foodfit.spoonacular.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineObject3
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-31T13:52:34.035+01:00[Europe/Berlin]")
public class InlineObject3 {
  public static final String SERIALIZED_NAME_INSTRUCTIONS = "instructions";
  @SerializedName(SERIALIZED_NAME_INSTRUCTIONS)
  private String instructions;

  public static final String SERIALIZED_NAME_VIEW = "view";
  @SerializedName(SERIALIZED_NAME_VIEW)
  private String view;

  public static final String SERIALIZED_NAME_DEFAULT_CSS = "defaultCss";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CSS)
  private Boolean defaultCss;

  public static final String SERIALIZED_NAME_SHOW_BACKLINK = "showBacklink";
  @SerializedName(SERIALIZED_NAME_SHOW_BACKLINK)
  private Boolean showBacklink;

  public InlineObject3 instructions(String instructions) {
    this.instructions = instructions;
    return this;
  }

   /**
   * The recipe&#39;s instructions.
   * @return instructions
  **/
  @ApiModelProperty(example = "Preheat oven. Cut cucumber with a knife and put in a blender.", required = true, value = "The recipe's instructions.")
  public String getInstructions() {
    return instructions;
  }

  public void setInstructions(String instructions) {
    this.instructions = instructions;
  }

  public InlineObject3 view(String view) {
    this.view = view;
    return this;
  }

   /**
   * How to visualize the equipment, either \&quot;grid\&quot; or \&quot;list\&quot;.
   * @return view
  **/
  @ApiModelProperty(example = "grid", value = "How to visualize the equipment, either \"grid\" or \"list\".")
  public String getView() {
    return view;
  }

  public void setView(String view) {
    this.view = view;
  }

  public InlineObject3 defaultCss(Boolean defaultCss) {
    this.defaultCss = defaultCss;
    return this;
  }

   /**
   * Whether the default CSS should be added to the response.
   * @return defaultCss
  **/
  @ApiModelProperty(example = "true", value = "Whether the default CSS should be added to the response.")
  public Boolean getDefaultCss() {
    return defaultCss;
  }

  public void setDefaultCss(Boolean defaultCss) {
    this.defaultCss = defaultCss;
  }

  public InlineObject3 showBacklink(Boolean showBacklink) {
    this.showBacklink = showBacklink;
    return this;
  }

   /**
   * Whether to show a backlink to spoonacular. If set false, this call counts against your quota.
   * @return showBacklink
  **/
  @ApiModelProperty(example = "true", value = "Whether to show a backlink to spoonacular. If set false, this call counts against your quota.")
  public Boolean getShowBacklink() {
    return showBacklink;
  }

  public void setShowBacklink(Boolean showBacklink) {
    this.showBacklink = showBacklink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject3 inlineObject3 = (InlineObject3) o;
    return Objects.equals(this.instructions, inlineObject3.instructions) &&
        Objects.equals(this.view, inlineObject3.view) &&
        Objects.equals(this.defaultCss, inlineObject3.defaultCss) &&
        Objects.equals(this.showBacklink, inlineObject3.showBacklink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instructions, view, defaultCss, showBacklink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject3 {\n");
    sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    defaultCss: ").append(toIndentedString(defaultCss)).append("\n");
    sb.append("    showBacklink: ").append(toIndentedString(showBacklink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

